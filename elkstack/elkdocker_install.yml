--- 
- 
  connection: localhost
  hosts: localhost
  vars: 
    kibana_passwd: changeme
    kibana_user: elastic
    elasticsearch_password: changeme
    elasticsearch_user: elastic
    elkserver_package:
     - { 'name': 'elasticsearch', 'state': "{{es_state}}", 'version': 'latest' }
     - { 'name': 'kibana', 'state': "{{kibana_state}}", 'version': 'latest' }
     - { 'name': 'logstash', 'state': "{{logstash_state}}", 'version': 'latest' }
    beats_package:
     - { 'name': 'filebeat', 'state': "{{filebeat_state}}", 'version': "{{beatversion}}" }
     - { 'name': 'metricbeat', 'state': "{{metricbeat_state}}", 'version': "{{beatversion}}" }
     - { 'name': 'packetbeat', 'state': "{{packetbeat_state}}", 'version': "{{beatversion}}" }
    services_package:
     - { 'name': 'nginx', 'state': "{{nginx_state}}", 'version': 'latest' }
     - { 'name': 'apache2', 'state': "{{apache2_state}}", 'version': 'latest' }
     - { 'name': 'mysql', 'state': "{{mysql_state}}", 'version': 'latest' }
    beats_output: "{{beats_output}}"
  tasks: 
    - 
      args: 
        chdir: /home/
      command: "curl -fsSL get.docker.com -o get-docker.sh"
      name: "Download docker script"
    - 
      name: "run docker script"
      script: /home/get-docker.sh
    - 
      name: "start Docker"
      service: 
        name: docker
        state: started
    - 
      apt: 
        name: python-pip
        state: present
      name: "install pip"
      register: results
    - 
      debug: 
        var: results
    - 
      command: "pip install docker-compose"
      name: "install docker-compose"
   
    - 
      args: 
        chdir: /home/elkstack/elkserver/
      command: "docker-compose -f docker-compose.yml up -d {{item.name}}"
      name: "elkserver docker up"
      when: "{{ item.state == 'present'}}" 
      with_items: "{{elkserver_package}}"
    - 
      args: 
        chdir: /home/elkstack/services/
      command: "docker-compose -f docker-compose-services.yml up -d {{item.name}}"
      name: "services docker up"
      when: "{{ item.state == 'present'}}" 
      with_items: "{{services_package}}"
     	
    - 
      args: 
        chdir: /home/elkstack/beats/      
      command: "docker-compose -f docker-compose-beats.yml up -d {{item.name}}"
      name: "Beats docker up"
      when: "{{ item.state == 'present'}}"
      with_items: "{{beats_package}}"		
    - 
      name: "Wait 300 seconds for port 5601 to become open on the host, don't start checking for 10 seconds"
      wait_for: 
        delay: 10
        port: 5601
    - 
      name: "Wait 300 seconds for port 9200 to become open on the host, don't start checking for 10 seconds"
      wait_for: 
        delay: 10
        port: 9200
    - 
      command: "curl -s http://localhost:9200/_cat/indices?pretty -u {{ elasticsearch_user }}:{{ elasticsearch_password }}"
      name: "check if elasticsearch returns any indices"
    - 
      command: "curl -s http://localhost:5601/status -u {{ kibana_user }}:{{ kibana_passwd }}"
      name: "check if kibana can be accessed"
    - 
      debug: 
        var: HostIP
        var: filebeat_state
        var: metricbeat_state
        var: packetbeat_state
  
    
   
